# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/jamin
pkgincludedir = $(includedir)/jamin
pkglibdir = $(libdir)/jamin
pkglibexecdir = $(libexecdir)/jamin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = jamin$(EXEEXT) 
EXTRA_PROGRAMS = jamin-scene$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/jamin.1.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = jamin.1
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libnopt_a_AR = $(AR) $(ARFLAGS)
libnopt_a_LIBADD =
am_libnopt_a_OBJECTS = libnopt_a-interface.$(OBJEXT)
libnopt_a_OBJECTS = $(am_libnopt_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"
PROGRAMS = $(bin_PROGRAMS)
am_jamin_OBJECTS = jamin-callbacks.$(OBJEXT) \
	jamin-compressor-ui.$(OBJEXT) jamin-geq.$(OBJEXT) \
	jamin-gtkmeter.$(OBJEXT) jamin-hdeq.$(OBJEXT) \
	jamin-intrim.$(OBJEXT) jamin-io.$(OBJEXT) \
	jamin-io-menu.$(OBJEXT) jamin-limiter-ui.$(OBJEXT) \
	jamin-presets-ui.$(OBJEXT) jamin-main.$(OBJEXT) \
	jamin-multiout-ui.$(OBJEXT) jamin-plugin.$(OBJEXT) \
	jamin-process.$(OBJEXT) jamin-resource.$(OBJEXT) \
	jamin-ringbuffer.$(OBJEXT) jamin-rms.$(OBJEXT) \
	jamin-spectrum.$(OBJEXT) jamin-spline.$(OBJEXT) \
	jamin-state.$(OBJEXT) jamin-status-ui.$(OBJEXT) \
	jamin-stereo.$(OBJEXT) jamin-support.$(OBJEXT) \
	jamin-transport.$(OBJEXT) jamin-scenes.$(OBJEXT) \
	jamin-preferences.$(OBJEXT) jamin-help.$(OBJEXT)
jamin_OBJECTS = $(am_jamin_OBJECTS)
jamin_DEPENDENCIES = libnopt.a
jamin_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(jamin_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_jamin_scene_OBJECTS = jamin_scene-jamin-scene.$(OBJEXT)
jamin_scene_OBJECTS = $(am_jamin_scene_OBJECTS)
jamin_scene_DEPENDENCIES =
jamin_scene_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(jamin_scene_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libnopt_a_SOURCES) $(jamin_SOURCES) $(jamin_scene_SOURCES)
DIST_SOURCES = $(libnopt_a_SOURCES) $(jamin_SOURCES) \
	$(jamin_scene_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /media/art/code/jamin/missing --run aclocal-1.11
ALL_LINGUAS = ru fr
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /media/art/code/jamin/missing --run autoconf
AUTOHEADER = ${SHELL} /media/art/code/jamin/missing --run autoheader
AUTOMAKE = ${SHELL} /media/art/code/jamin/missing --run automake-1.11
AWK = gawk
CATALOGS =  ru.gmo fr.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -DGDK_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED
CFLAGS_OPT = -DGDK_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FFTW_CFLAGS =  
FFTW_LIBS = -lfftw3f -lm  
FGREP = /bin/grep -F
GETTEXT_PACKAGE = jamin
GMOFILES =  ru.gmo fr.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
JACK_CFLAGS =  
JACK_LIBS = -ljack  
JAMIN_CFLAGS = -g    -I/usr/include/libxml2    -Wall
JAMIN_LIBS = -lfftw3f -lm   -lxml2   -ljack   
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm -lm -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /media/art/code/jamin/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OSC_CFLAGS = 
OSC_LIBS = 
OSC_PROGS = 
OTOOL = 
OTOOL64 = 
PACKAGE = jamin
PACKAGE_BUGREPORT = 
PACKAGE_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/atk-1.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/libdrm  
PACKAGE_LIBS = -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lgobject-2.0 -lglib-2.0  
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES =  ru.po fr.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 0.98.8
XGETTEXT = /usr/bin/xgettext
XML_CFLAGS = -I/usr/include/libxml2  
XML_LIBS = -lxml2  
abs_builddir = /media/art/code/jamin/src
abs_srcdir = /media/art/code/jamin/src
abs_top_builddir = /media/art/code/jamin
abs_top_srcdir = /media/art/code/jamin
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /media/art/code/jamin/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
	-DPACKAGE_LIB_DIR=\""$(libdir)"\" \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-pthread -I/usr/include/gtk-3.0 -I/usr/include/atk-1.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/libdrm   -g    -I/usr/include/libxml2    -Wall


# use a convenience library to build non-optimized sources.
noinst_LIBRARIES = libnopt.a
libnopt_a_SOURCES = interface.c interface.h
libnopt_a_CFLAGS = -g -g    -I/usr/include/libxml2    -Wall
jamin_CFLAGS = -DGDK_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -g    -I/usr/include/libxml2    -Wall
jamin_LDADD = libnopt.a -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lgobject-2.0 -lglib-2.0   -lfftw3f -lm   -lxml2   -ljack   
man_MANS = jamin.1
jamin_SOURCES = \
	callbacks.c callbacks.h callbacks_help.h \
	compressor.h \
	compressor-ui.c compressor-ui.h \
	constants.h \
	db.h \
	debug.h \
	ladspa.h \
	geq.c geq.h \
	gtkmeter.c gtkmeter.h \
	hdeq.c hdeq.h \
	intrim.c intrim.h \
	io.c io.h \
	io-menu.c io-menu.h \
	jackstatus.h \
	limiter.h \
	limiter-ui.c limiter-ui.h \
	presets-ui.c presets-ui.h \
	main.c main.h \
	multiout-ui.c multiout-ui.h \
	plugin.c plugin.h \
	process.c process.h \
	resource.c resource.h \
	ringbuffer.c ringbuffer.h \
	rms.c rms.h \
	spectrum.c spectrum.h \
	spline.c \
	state.c state.h \
	status-ui.c status-ui.h \
	stereo.c stereo.h \
	support.c support.h \
	transport.c transport.h \
	scenes.c scenes.h \
	preferences.c preferences.h \
	help.c help.h \
	denormal-kill.h \
	biquad.h

jamin_scene_CFLAGS = 
jamin_scene_LDADD = 
jamin_scene_SOURCES = jamin-scene.c constants.h
EXTRA_DIST = mk-stateh.pl state-vars.txt $(man_MANS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
jamin.1: $(top_builddir)/config.status $(srcdir)/jamin.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libnopt.a: $(libnopt_a_OBJECTS) $(libnopt_a_DEPENDENCIES) $(EXTRA_libnopt_a_DEPENDENCIES) 
	-rm -f libnopt.a
	$(libnopt_a_AR) libnopt.a $(libnopt_a_OBJECTS) $(libnopt_a_LIBADD)
	$(RANLIB) libnopt.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
jamin$(EXEEXT): $(jamin_OBJECTS) $(jamin_DEPENDENCIES) $(EXTRA_jamin_DEPENDENCIES) 
	@rm -f jamin$(EXEEXT)
	$(jamin_LINK) $(jamin_OBJECTS) $(jamin_LDADD) $(LIBS)
jamin-scene$(EXEEXT): $(jamin_scene_OBJECTS) $(jamin_scene_DEPENDENCIES) $(EXTRA_jamin_scene_DEPENDENCIES) 
	@rm -f jamin-scene$(EXEEXT)
	$(jamin_scene_LINK) $(jamin_scene_OBJECTS) $(jamin_scene_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/jamin-callbacks.Po
include ./$(DEPDIR)/jamin-compressor-ui.Po
include ./$(DEPDIR)/jamin-geq.Po
include ./$(DEPDIR)/jamin-gtkmeter.Po
include ./$(DEPDIR)/jamin-hdeq.Po
include ./$(DEPDIR)/jamin-help.Po
include ./$(DEPDIR)/jamin-intrim.Po
include ./$(DEPDIR)/jamin-io-menu.Po
include ./$(DEPDIR)/jamin-io.Po
include ./$(DEPDIR)/jamin-limiter-ui.Po
include ./$(DEPDIR)/jamin-main.Po
include ./$(DEPDIR)/jamin-multiout-ui.Po
include ./$(DEPDIR)/jamin-plugin.Po
include ./$(DEPDIR)/jamin-preferences.Po
include ./$(DEPDIR)/jamin-presets-ui.Po
include ./$(DEPDIR)/jamin-process.Po
include ./$(DEPDIR)/jamin-resource.Po
include ./$(DEPDIR)/jamin-ringbuffer.Po
include ./$(DEPDIR)/jamin-rms.Po
include ./$(DEPDIR)/jamin-scenes.Po
include ./$(DEPDIR)/jamin-spectrum.Po
include ./$(DEPDIR)/jamin-spline.Po
include ./$(DEPDIR)/jamin-state.Po
include ./$(DEPDIR)/jamin-status-ui.Po
include ./$(DEPDIR)/jamin-stereo.Po
include ./$(DEPDIR)/jamin-support.Po
include ./$(DEPDIR)/jamin-transport.Po
include ./$(DEPDIR)/jamin_scene-jamin-scene.Po
include ./$(DEPDIR)/libnopt_a-interface.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libnopt_a-interface.o: interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnopt_a_CFLAGS) $(CFLAGS) -MT libnopt_a-interface.o -MD -MP -MF $(DEPDIR)/libnopt_a-interface.Tpo -c -o libnopt_a-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c
	$(am__mv) $(DEPDIR)/libnopt_a-interface.Tpo $(DEPDIR)/libnopt_a-interface.Po
#	source='interface.c' object='libnopt_a-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnopt_a_CFLAGS) $(CFLAGS) -c -o libnopt_a-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

libnopt_a-interface.obj: interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnopt_a_CFLAGS) $(CFLAGS) -MT libnopt_a-interface.obj -MD -MP -MF $(DEPDIR)/libnopt_a-interface.Tpo -c -o libnopt_a-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`
	$(am__mv) $(DEPDIR)/libnopt_a-interface.Tpo $(DEPDIR)/libnopt_a-interface.Po
#	source='interface.c' object='libnopt_a-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnopt_a_CFLAGS) $(CFLAGS) -c -o libnopt_a-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`

jamin-callbacks.o: callbacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-callbacks.o -MD -MP -MF $(DEPDIR)/jamin-callbacks.Tpo -c -o jamin-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c
	$(am__mv) $(DEPDIR)/jamin-callbacks.Tpo $(DEPDIR)/jamin-callbacks.Po
#	source='callbacks.c' object='jamin-callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c

jamin-callbacks.obj: callbacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-callbacks.obj -MD -MP -MF $(DEPDIR)/jamin-callbacks.Tpo -c -o jamin-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-callbacks.Tpo $(DEPDIR)/jamin-callbacks.Po
#	source='callbacks.c' object='jamin-callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`

jamin-compressor-ui.o: compressor-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-compressor-ui.o -MD -MP -MF $(DEPDIR)/jamin-compressor-ui.Tpo -c -o jamin-compressor-ui.o `test -f 'compressor-ui.c' || echo '$(srcdir)/'`compressor-ui.c
	$(am__mv) $(DEPDIR)/jamin-compressor-ui.Tpo $(DEPDIR)/jamin-compressor-ui.Po
#	source='compressor-ui.c' object='jamin-compressor-ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-compressor-ui.o `test -f 'compressor-ui.c' || echo '$(srcdir)/'`compressor-ui.c

jamin-compressor-ui.obj: compressor-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-compressor-ui.obj -MD -MP -MF $(DEPDIR)/jamin-compressor-ui.Tpo -c -o jamin-compressor-ui.obj `if test -f 'compressor-ui.c'; then $(CYGPATH_W) 'compressor-ui.c'; else $(CYGPATH_W) '$(srcdir)/compressor-ui.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-compressor-ui.Tpo $(DEPDIR)/jamin-compressor-ui.Po
#	source='compressor-ui.c' object='jamin-compressor-ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-compressor-ui.obj `if test -f 'compressor-ui.c'; then $(CYGPATH_W) 'compressor-ui.c'; else $(CYGPATH_W) '$(srcdir)/compressor-ui.c'; fi`

jamin-geq.o: geq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-geq.o -MD -MP -MF $(DEPDIR)/jamin-geq.Tpo -c -o jamin-geq.o `test -f 'geq.c' || echo '$(srcdir)/'`geq.c
	$(am__mv) $(DEPDIR)/jamin-geq.Tpo $(DEPDIR)/jamin-geq.Po
#	source='geq.c' object='jamin-geq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-geq.o `test -f 'geq.c' || echo '$(srcdir)/'`geq.c

jamin-geq.obj: geq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-geq.obj -MD -MP -MF $(DEPDIR)/jamin-geq.Tpo -c -o jamin-geq.obj `if test -f 'geq.c'; then $(CYGPATH_W) 'geq.c'; else $(CYGPATH_W) '$(srcdir)/geq.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-geq.Tpo $(DEPDIR)/jamin-geq.Po
#	source='geq.c' object='jamin-geq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-geq.obj `if test -f 'geq.c'; then $(CYGPATH_W) 'geq.c'; else $(CYGPATH_W) '$(srcdir)/geq.c'; fi`

jamin-gtkmeter.o: gtkmeter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-gtkmeter.o -MD -MP -MF $(DEPDIR)/jamin-gtkmeter.Tpo -c -o jamin-gtkmeter.o `test -f 'gtkmeter.c' || echo '$(srcdir)/'`gtkmeter.c
	$(am__mv) $(DEPDIR)/jamin-gtkmeter.Tpo $(DEPDIR)/jamin-gtkmeter.Po
#	source='gtkmeter.c' object='jamin-gtkmeter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-gtkmeter.o `test -f 'gtkmeter.c' || echo '$(srcdir)/'`gtkmeter.c

jamin-gtkmeter.obj: gtkmeter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-gtkmeter.obj -MD -MP -MF $(DEPDIR)/jamin-gtkmeter.Tpo -c -o jamin-gtkmeter.obj `if test -f 'gtkmeter.c'; then $(CYGPATH_W) 'gtkmeter.c'; else $(CYGPATH_W) '$(srcdir)/gtkmeter.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-gtkmeter.Tpo $(DEPDIR)/jamin-gtkmeter.Po
#	source='gtkmeter.c' object='jamin-gtkmeter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-gtkmeter.obj `if test -f 'gtkmeter.c'; then $(CYGPATH_W) 'gtkmeter.c'; else $(CYGPATH_W) '$(srcdir)/gtkmeter.c'; fi`

jamin-hdeq.o: hdeq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-hdeq.o -MD -MP -MF $(DEPDIR)/jamin-hdeq.Tpo -c -o jamin-hdeq.o `test -f 'hdeq.c' || echo '$(srcdir)/'`hdeq.c
	$(am__mv) $(DEPDIR)/jamin-hdeq.Tpo $(DEPDIR)/jamin-hdeq.Po
#	source='hdeq.c' object='jamin-hdeq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-hdeq.o `test -f 'hdeq.c' || echo '$(srcdir)/'`hdeq.c

jamin-hdeq.obj: hdeq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-hdeq.obj -MD -MP -MF $(DEPDIR)/jamin-hdeq.Tpo -c -o jamin-hdeq.obj `if test -f 'hdeq.c'; then $(CYGPATH_W) 'hdeq.c'; else $(CYGPATH_W) '$(srcdir)/hdeq.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-hdeq.Tpo $(DEPDIR)/jamin-hdeq.Po
#	source='hdeq.c' object='jamin-hdeq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-hdeq.obj `if test -f 'hdeq.c'; then $(CYGPATH_W) 'hdeq.c'; else $(CYGPATH_W) '$(srcdir)/hdeq.c'; fi`

jamin-intrim.o: intrim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-intrim.o -MD -MP -MF $(DEPDIR)/jamin-intrim.Tpo -c -o jamin-intrim.o `test -f 'intrim.c' || echo '$(srcdir)/'`intrim.c
	$(am__mv) $(DEPDIR)/jamin-intrim.Tpo $(DEPDIR)/jamin-intrim.Po
#	source='intrim.c' object='jamin-intrim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-intrim.o `test -f 'intrim.c' || echo '$(srcdir)/'`intrim.c

jamin-intrim.obj: intrim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-intrim.obj -MD -MP -MF $(DEPDIR)/jamin-intrim.Tpo -c -o jamin-intrim.obj `if test -f 'intrim.c'; then $(CYGPATH_W) 'intrim.c'; else $(CYGPATH_W) '$(srcdir)/intrim.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-intrim.Tpo $(DEPDIR)/jamin-intrim.Po
#	source='intrim.c' object='jamin-intrim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-intrim.obj `if test -f 'intrim.c'; then $(CYGPATH_W) 'intrim.c'; else $(CYGPATH_W) '$(srcdir)/intrim.c'; fi`

jamin-io.o: io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-io.o -MD -MP -MF $(DEPDIR)/jamin-io.Tpo -c -o jamin-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c
	$(am__mv) $(DEPDIR)/jamin-io.Tpo $(DEPDIR)/jamin-io.Po
#	source='io.c' object='jamin-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c

jamin-io.obj: io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-io.obj -MD -MP -MF $(DEPDIR)/jamin-io.Tpo -c -o jamin-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-io.Tpo $(DEPDIR)/jamin-io.Po
#	source='io.c' object='jamin-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`

jamin-io-menu.o: io-menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-io-menu.o -MD -MP -MF $(DEPDIR)/jamin-io-menu.Tpo -c -o jamin-io-menu.o `test -f 'io-menu.c' || echo '$(srcdir)/'`io-menu.c
	$(am__mv) $(DEPDIR)/jamin-io-menu.Tpo $(DEPDIR)/jamin-io-menu.Po
#	source='io-menu.c' object='jamin-io-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-io-menu.o `test -f 'io-menu.c' || echo '$(srcdir)/'`io-menu.c

jamin-io-menu.obj: io-menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-io-menu.obj -MD -MP -MF $(DEPDIR)/jamin-io-menu.Tpo -c -o jamin-io-menu.obj `if test -f 'io-menu.c'; then $(CYGPATH_W) 'io-menu.c'; else $(CYGPATH_W) '$(srcdir)/io-menu.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-io-menu.Tpo $(DEPDIR)/jamin-io-menu.Po
#	source='io-menu.c' object='jamin-io-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-io-menu.obj `if test -f 'io-menu.c'; then $(CYGPATH_W) 'io-menu.c'; else $(CYGPATH_W) '$(srcdir)/io-menu.c'; fi`

jamin-limiter-ui.o: limiter-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-limiter-ui.o -MD -MP -MF $(DEPDIR)/jamin-limiter-ui.Tpo -c -o jamin-limiter-ui.o `test -f 'limiter-ui.c' || echo '$(srcdir)/'`limiter-ui.c
	$(am__mv) $(DEPDIR)/jamin-limiter-ui.Tpo $(DEPDIR)/jamin-limiter-ui.Po
#	source='limiter-ui.c' object='jamin-limiter-ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-limiter-ui.o `test -f 'limiter-ui.c' || echo '$(srcdir)/'`limiter-ui.c

jamin-limiter-ui.obj: limiter-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-limiter-ui.obj -MD -MP -MF $(DEPDIR)/jamin-limiter-ui.Tpo -c -o jamin-limiter-ui.obj `if test -f 'limiter-ui.c'; then $(CYGPATH_W) 'limiter-ui.c'; else $(CYGPATH_W) '$(srcdir)/limiter-ui.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-limiter-ui.Tpo $(DEPDIR)/jamin-limiter-ui.Po
#	source='limiter-ui.c' object='jamin-limiter-ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-limiter-ui.obj `if test -f 'limiter-ui.c'; then $(CYGPATH_W) 'limiter-ui.c'; else $(CYGPATH_W) '$(srcdir)/limiter-ui.c'; fi`

jamin-presets-ui.o: presets-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-presets-ui.o -MD -MP -MF $(DEPDIR)/jamin-presets-ui.Tpo -c -o jamin-presets-ui.o `test -f 'presets-ui.c' || echo '$(srcdir)/'`presets-ui.c
	$(am__mv) $(DEPDIR)/jamin-presets-ui.Tpo $(DEPDIR)/jamin-presets-ui.Po
#	source='presets-ui.c' object='jamin-presets-ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-presets-ui.o `test -f 'presets-ui.c' || echo '$(srcdir)/'`presets-ui.c

jamin-presets-ui.obj: presets-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-presets-ui.obj -MD -MP -MF $(DEPDIR)/jamin-presets-ui.Tpo -c -o jamin-presets-ui.obj `if test -f 'presets-ui.c'; then $(CYGPATH_W) 'presets-ui.c'; else $(CYGPATH_W) '$(srcdir)/presets-ui.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-presets-ui.Tpo $(DEPDIR)/jamin-presets-ui.Po
#	source='presets-ui.c' object='jamin-presets-ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-presets-ui.obj `if test -f 'presets-ui.c'; then $(CYGPATH_W) 'presets-ui.c'; else $(CYGPATH_W) '$(srcdir)/presets-ui.c'; fi`

jamin-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-main.o -MD -MP -MF $(DEPDIR)/jamin-main.Tpo -c -o jamin-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/jamin-main.Tpo $(DEPDIR)/jamin-main.Po
#	source='main.c' object='jamin-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

jamin-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-main.obj -MD -MP -MF $(DEPDIR)/jamin-main.Tpo -c -o jamin-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-main.Tpo $(DEPDIR)/jamin-main.Po
#	source='main.c' object='jamin-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

jamin-multiout-ui.o: multiout-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-multiout-ui.o -MD -MP -MF $(DEPDIR)/jamin-multiout-ui.Tpo -c -o jamin-multiout-ui.o `test -f 'multiout-ui.c' || echo '$(srcdir)/'`multiout-ui.c
	$(am__mv) $(DEPDIR)/jamin-multiout-ui.Tpo $(DEPDIR)/jamin-multiout-ui.Po
#	source='multiout-ui.c' object='jamin-multiout-ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-multiout-ui.o `test -f 'multiout-ui.c' || echo '$(srcdir)/'`multiout-ui.c

jamin-multiout-ui.obj: multiout-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-multiout-ui.obj -MD -MP -MF $(DEPDIR)/jamin-multiout-ui.Tpo -c -o jamin-multiout-ui.obj `if test -f 'multiout-ui.c'; then $(CYGPATH_W) 'multiout-ui.c'; else $(CYGPATH_W) '$(srcdir)/multiout-ui.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-multiout-ui.Tpo $(DEPDIR)/jamin-multiout-ui.Po
#	source='multiout-ui.c' object='jamin-multiout-ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-multiout-ui.obj `if test -f 'multiout-ui.c'; then $(CYGPATH_W) 'multiout-ui.c'; else $(CYGPATH_W) '$(srcdir)/multiout-ui.c'; fi`

jamin-plugin.o: plugin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-plugin.o -MD -MP -MF $(DEPDIR)/jamin-plugin.Tpo -c -o jamin-plugin.o `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c
	$(am__mv) $(DEPDIR)/jamin-plugin.Tpo $(DEPDIR)/jamin-plugin.Po
#	source='plugin.c' object='jamin-plugin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-plugin.o `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c

jamin-plugin.obj: plugin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-plugin.obj -MD -MP -MF $(DEPDIR)/jamin-plugin.Tpo -c -o jamin-plugin.obj `if test -f 'plugin.c'; then $(CYGPATH_W) 'plugin.c'; else $(CYGPATH_W) '$(srcdir)/plugin.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-plugin.Tpo $(DEPDIR)/jamin-plugin.Po
#	source='plugin.c' object='jamin-plugin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-plugin.obj `if test -f 'plugin.c'; then $(CYGPATH_W) 'plugin.c'; else $(CYGPATH_W) '$(srcdir)/plugin.c'; fi`

jamin-process.o: process.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-process.o -MD -MP -MF $(DEPDIR)/jamin-process.Tpo -c -o jamin-process.o `test -f 'process.c' || echo '$(srcdir)/'`process.c
	$(am__mv) $(DEPDIR)/jamin-process.Tpo $(DEPDIR)/jamin-process.Po
#	source='process.c' object='jamin-process.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-process.o `test -f 'process.c' || echo '$(srcdir)/'`process.c

jamin-process.obj: process.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-process.obj -MD -MP -MF $(DEPDIR)/jamin-process.Tpo -c -o jamin-process.obj `if test -f 'process.c'; then $(CYGPATH_W) 'process.c'; else $(CYGPATH_W) '$(srcdir)/process.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-process.Tpo $(DEPDIR)/jamin-process.Po
#	source='process.c' object='jamin-process.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-process.obj `if test -f 'process.c'; then $(CYGPATH_W) 'process.c'; else $(CYGPATH_W) '$(srcdir)/process.c'; fi`

jamin-resource.o: resource.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-resource.o -MD -MP -MF $(DEPDIR)/jamin-resource.Tpo -c -o jamin-resource.o `test -f 'resource.c' || echo '$(srcdir)/'`resource.c
	$(am__mv) $(DEPDIR)/jamin-resource.Tpo $(DEPDIR)/jamin-resource.Po
#	source='resource.c' object='jamin-resource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-resource.o `test -f 'resource.c' || echo '$(srcdir)/'`resource.c

jamin-resource.obj: resource.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-resource.obj -MD -MP -MF $(DEPDIR)/jamin-resource.Tpo -c -o jamin-resource.obj `if test -f 'resource.c'; then $(CYGPATH_W) 'resource.c'; else $(CYGPATH_W) '$(srcdir)/resource.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-resource.Tpo $(DEPDIR)/jamin-resource.Po
#	source='resource.c' object='jamin-resource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-resource.obj `if test -f 'resource.c'; then $(CYGPATH_W) 'resource.c'; else $(CYGPATH_W) '$(srcdir)/resource.c'; fi`

jamin-ringbuffer.o: ringbuffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-ringbuffer.o -MD -MP -MF $(DEPDIR)/jamin-ringbuffer.Tpo -c -o jamin-ringbuffer.o `test -f 'ringbuffer.c' || echo '$(srcdir)/'`ringbuffer.c
	$(am__mv) $(DEPDIR)/jamin-ringbuffer.Tpo $(DEPDIR)/jamin-ringbuffer.Po
#	source='ringbuffer.c' object='jamin-ringbuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-ringbuffer.o `test -f 'ringbuffer.c' || echo '$(srcdir)/'`ringbuffer.c

jamin-ringbuffer.obj: ringbuffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-ringbuffer.obj -MD -MP -MF $(DEPDIR)/jamin-ringbuffer.Tpo -c -o jamin-ringbuffer.obj `if test -f 'ringbuffer.c'; then $(CYGPATH_W) 'ringbuffer.c'; else $(CYGPATH_W) '$(srcdir)/ringbuffer.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-ringbuffer.Tpo $(DEPDIR)/jamin-ringbuffer.Po
#	source='ringbuffer.c' object='jamin-ringbuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-ringbuffer.obj `if test -f 'ringbuffer.c'; then $(CYGPATH_W) 'ringbuffer.c'; else $(CYGPATH_W) '$(srcdir)/ringbuffer.c'; fi`

jamin-rms.o: rms.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-rms.o -MD -MP -MF $(DEPDIR)/jamin-rms.Tpo -c -o jamin-rms.o `test -f 'rms.c' || echo '$(srcdir)/'`rms.c
	$(am__mv) $(DEPDIR)/jamin-rms.Tpo $(DEPDIR)/jamin-rms.Po
#	source='rms.c' object='jamin-rms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-rms.o `test -f 'rms.c' || echo '$(srcdir)/'`rms.c

jamin-rms.obj: rms.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-rms.obj -MD -MP -MF $(DEPDIR)/jamin-rms.Tpo -c -o jamin-rms.obj `if test -f 'rms.c'; then $(CYGPATH_W) 'rms.c'; else $(CYGPATH_W) '$(srcdir)/rms.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-rms.Tpo $(DEPDIR)/jamin-rms.Po
#	source='rms.c' object='jamin-rms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-rms.obj `if test -f 'rms.c'; then $(CYGPATH_W) 'rms.c'; else $(CYGPATH_W) '$(srcdir)/rms.c'; fi`

jamin-spectrum.o: spectrum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-spectrum.o -MD -MP -MF $(DEPDIR)/jamin-spectrum.Tpo -c -o jamin-spectrum.o `test -f 'spectrum.c' || echo '$(srcdir)/'`spectrum.c
	$(am__mv) $(DEPDIR)/jamin-spectrum.Tpo $(DEPDIR)/jamin-spectrum.Po
#	source='spectrum.c' object='jamin-spectrum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-spectrum.o `test -f 'spectrum.c' || echo '$(srcdir)/'`spectrum.c

jamin-spectrum.obj: spectrum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-spectrum.obj -MD -MP -MF $(DEPDIR)/jamin-spectrum.Tpo -c -o jamin-spectrum.obj `if test -f 'spectrum.c'; then $(CYGPATH_W) 'spectrum.c'; else $(CYGPATH_W) '$(srcdir)/spectrum.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-spectrum.Tpo $(DEPDIR)/jamin-spectrum.Po
#	source='spectrum.c' object='jamin-spectrum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-spectrum.obj `if test -f 'spectrum.c'; then $(CYGPATH_W) 'spectrum.c'; else $(CYGPATH_W) '$(srcdir)/spectrum.c'; fi`

jamin-spline.o: spline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-spline.o -MD -MP -MF $(DEPDIR)/jamin-spline.Tpo -c -o jamin-spline.o `test -f 'spline.c' || echo '$(srcdir)/'`spline.c
	$(am__mv) $(DEPDIR)/jamin-spline.Tpo $(DEPDIR)/jamin-spline.Po
#	source='spline.c' object='jamin-spline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-spline.o `test -f 'spline.c' || echo '$(srcdir)/'`spline.c

jamin-spline.obj: spline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-spline.obj -MD -MP -MF $(DEPDIR)/jamin-spline.Tpo -c -o jamin-spline.obj `if test -f 'spline.c'; then $(CYGPATH_W) 'spline.c'; else $(CYGPATH_W) '$(srcdir)/spline.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-spline.Tpo $(DEPDIR)/jamin-spline.Po
#	source='spline.c' object='jamin-spline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-spline.obj `if test -f 'spline.c'; then $(CYGPATH_W) 'spline.c'; else $(CYGPATH_W) '$(srcdir)/spline.c'; fi`

jamin-state.o: state.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-state.o -MD -MP -MF $(DEPDIR)/jamin-state.Tpo -c -o jamin-state.o `test -f 'state.c' || echo '$(srcdir)/'`state.c
	$(am__mv) $(DEPDIR)/jamin-state.Tpo $(DEPDIR)/jamin-state.Po
#	source='state.c' object='jamin-state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-state.o `test -f 'state.c' || echo '$(srcdir)/'`state.c

jamin-state.obj: state.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-state.obj -MD -MP -MF $(DEPDIR)/jamin-state.Tpo -c -o jamin-state.obj `if test -f 'state.c'; then $(CYGPATH_W) 'state.c'; else $(CYGPATH_W) '$(srcdir)/state.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-state.Tpo $(DEPDIR)/jamin-state.Po
#	source='state.c' object='jamin-state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-state.obj `if test -f 'state.c'; then $(CYGPATH_W) 'state.c'; else $(CYGPATH_W) '$(srcdir)/state.c'; fi`

jamin-status-ui.o: status-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-status-ui.o -MD -MP -MF $(DEPDIR)/jamin-status-ui.Tpo -c -o jamin-status-ui.o `test -f 'status-ui.c' || echo '$(srcdir)/'`status-ui.c
	$(am__mv) $(DEPDIR)/jamin-status-ui.Tpo $(DEPDIR)/jamin-status-ui.Po
#	source='status-ui.c' object='jamin-status-ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-status-ui.o `test -f 'status-ui.c' || echo '$(srcdir)/'`status-ui.c

jamin-status-ui.obj: status-ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-status-ui.obj -MD -MP -MF $(DEPDIR)/jamin-status-ui.Tpo -c -o jamin-status-ui.obj `if test -f 'status-ui.c'; then $(CYGPATH_W) 'status-ui.c'; else $(CYGPATH_W) '$(srcdir)/status-ui.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-status-ui.Tpo $(DEPDIR)/jamin-status-ui.Po
#	source='status-ui.c' object='jamin-status-ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-status-ui.obj `if test -f 'status-ui.c'; then $(CYGPATH_W) 'status-ui.c'; else $(CYGPATH_W) '$(srcdir)/status-ui.c'; fi`

jamin-stereo.o: stereo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-stereo.o -MD -MP -MF $(DEPDIR)/jamin-stereo.Tpo -c -o jamin-stereo.o `test -f 'stereo.c' || echo '$(srcdir)/'`stereo.c
	$(am__mv) $(DEPDIR)/jamin-stereo.Tpo $(DEPDIR)/jamin-stereo.Po
#	source='stereo.c' object='jamin-stereo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-stereo.o `test -f 'stereo.c' || echo '$(srcdir)/'`stereo.c

jamin-stereo.obj: stereo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-stereo.obj -MD -MP -MF $(DEPDIR)/jamin-stereo.Tpo -c -o jamin-stereo.obj `if test -f 'stereo.c'; then $(CYGPATH_W) 'stereo.c'; else $(CYGPATH_W) '$(srcdir)/stereo.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-stereo.Tpo $(DEPDIR)/jamin-stereo.Po
#	source='stereo.c' object='jamin-stereo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-stereo.obj `if test -f 'stereo.c'; then $(CYGPATH_W) 'stereo.c'; else $(CYGPATH_W) '$(srcdir)/stereo.c'; fi`

jamin-support.o: support.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-support.o -MD -MP -MF $(DEPDIR)/jamin-support.Tpo -c -o jamin-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c
	$(am__mv) $(DEPDIR)/jamin-support.Tpo $(DEPDIR)/jamin-support.Po
#	source='support.c' object='jamin-support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

jamin-support.obj: support.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-support.obj -MD -MP -MF $(DEPDIR)/jamin-support.Tpo -c -o jamin-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-support.Tpo $(DEPDIR)/jamin-support.Po
#	source='support.c' object='jamin-support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

jamin-transport.o: transport.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-transport.o -MD -MP -MF $(DEPDIR)/jamin-transport.Tpo -c -o jamin-transport.o `test -f 'transport.c' || echo '$(srcdir)/'`transport.c
	$(am__mv) $(DEPDIR)/jamin-transport.Tpo $(DEPDIR)/jamin-transport.Po
#	source='transport.c' object='jamin-transport.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-transport.o `test -f 'transport.c' || echo '$(srcdir)/'`transport.c

jamin-transport.obj: transport.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-transport.obj -MD -MP -MF $(DEPDIR)/jamin-transport.Tpo -c -o jamin-transport.obj `if test -f 'transport.c'; then $(CYGPATH_W) 'transport.c'; else $(CYGPATH_W) '$(srcdir)/transport.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-transport.Tpo $(DEPDIR)/jamin-transport.Po
#	source='transport.c' object='jamin-transport.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-transport.obj `if test -f 'transport.c'; then $(CYGPATH_W) 'transport.c'; else $(CYGPATH_W) '$(srcdir)/transport.c'; fi`

jamin-scenes.o: scenes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-scenes.o -MD -MP -MF $(DEPDIR)/jamin-scenes.Tpo -c -o jamin-scenes.o `test -f 'scenes.c' || echo '$(srcdir)/'`scenes.c
	$(am__mv) $(DEPDIR)/jamin-scenes.Tpo $(DEPDIR)/jamin-scenes.Po
#	source='scenes.c' object='jamin-scenes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-scenes.o `test -f 'scenes.c' || echo '$(srcdir)/'`scenes.c

jamin-scenes.obj: scenes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-scenes.obj -MD -MP -MF $(DEPDIR)/jamin-scenes.Tpo -c -o jamin-scenes.obj `if test -f 'scenes.c'; then $(CYGPATH_W) 'scenes.c'; else $(CYGPATH_W) '$(srcdir)/scenes.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-scenes.Tpo $(DEPDIR)/jamin-scenes.Po
#	source='scenes.c' object='jamin-scenes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-scenes.obj `if test -f 'scenes.c'; then $(CYGPATH_W) 'scenes.c'; else $(CYGPATH_W) '$(srcdir)/scenes.c'; fi`

jamin-preferences.o: preferences.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-preferences.o -MD -MP -MF $(DEPDIR)/jamin-preferences.Tpo -c -o jamin-preferences.o `test -f 'preferences.c' || echo '$(srcdir)/'`preferences.c
	$(am__mv) $(DEPDIR)/jamin-preferences.Tpo $(DEPDIR)/jamin-preferences.Po
#	source='preferences.c' object='jamin-preferences.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-preferences.o `test -f 'preferences.c' || echo '$(srcdir)/'`preferences.c

jamin-preferences.obj: preferences.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-preferences.obj -MD -MP -MF $(DEPDIR)/jamin-preferences.Tpo -c -o jamin-preferences.obj `if test -f 'preferences.c'; then $(CYGPATH_W) 'preferences.c'; else $(CYGPATH_W) '$(srcdir)/preferences.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-preferences.Tpo $(DEPDIR)/jamin-preferences.Po
#	source='preferences.c' object='jamin-preferences.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-preferences.obj `if test -f 'preferences.c'; then $(CYGPATH_W) 'preferences.c'; else $(CYGPATH_W) '$(srcdir)/preferences.c'; fi`

jamin-help.o: help.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-help.o -MD -MP -MF $(DEPDIR)/jamin-help.Tpo -c -o jamin-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c
	$(am__mv) $(DEPDIR)/jamin-help.Tpo $(DEPDIR)/jamin-help.Po
#	source='help.c' object='jamin-help.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c

jamin-help.obj: help.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -MT jamin-help.obj -MD -MP -MF $(DEPDIR)/jamin-help.Tpo -c -o jamin-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`
	$(am__mv) $(DEPDIR)/jamin-help.Tpo $(DEPDIR)/jamin-help.Po
#	source='help.c' object='jamin-help.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_CFLAGS) $(CFLAGS) -c -o jamin-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`

jamin_scene-jamin-scene.o: jamin-scene.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_scene_CFLAGS) $(CFLAGS) -MT jamin_scene-jamin-scene.o -MD -MP -MF $(DEPDIR)/jamin_scene-jamin-scene.Tpo -c -o jamin_scene-jamin-scene.o `test -f 'jamin-scene.c' || echo '$(srcdir)/'`jamin-scene.c
	$(am__mv) $(DEPDIR)/jamin_scene-jamin-scene.Tpo $(DEPDIR)/jamin_scene-jamin-scene.Po
#	source='jamin-scene.c' object='jamin_scene-jamin-scene.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_scene_CFLAGS) $(CFLAGS) -c -o jamin_scene-jamin-scene.o `test -f 'jamin-scene.c' || echo '$(srcdir)/'`jamin-scene.c

jamin_scene-jamin-scene.obj: jamin-scene.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_scene_CFLAGS) $(CFLAGS) -MT jamin_scene-jamin-scene.obj -MD -MP -MF $(DEPDIR)/jamin_scene-jamin-scene.Tpo -c -o jamin_scene-jamin-scene.obj `if test -f 'jamin-scene.c'; then $(CYGPATH_W) 'jamin-scene.c'; else $(CYGPATH_W) '$(srcdir)/jamin-scene.c'; fi`
	$(am__mv) $(DEPDIR)/jamin_scene-jamin-scene.Tpo $(DEPDIR)/jamin_scene-jamin-scene.Po
#	source='jamin-scene.c' object='jamin_scene-jamin-scene.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jamin_scene_CFLAGS) $(CFLAGS) -c -o jamin_scene-jamin-scene.obj `if test -f 'jamin-scene.c'; then $(CYGPATH_W) 'jamin-scene.c'; else $(CYGPATH_W) '$(srcdir)/jamin-scene.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(MANS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man

uninstall-man: uninstall-man1

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-man1 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-man uninstall-man1


state.h: mk-stateh.pl state-vars.txt
	@echo "WARNING: Rebuilding state.h"
	./mk-stateh.pl

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
